<catel:UserControl
    x:Class="PresetMagician.Views.VstPluginView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:catel="http://schemas.catelproject.com"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vendorPresetParser="clr-namespace:Drachenkatze.PresetMagician.VendorPresetParser;assembly=Drachenkatze.PresetMagician.VendorPresetParser"
    xmlns:viewModels="clr-namespace:PresetMagician.ViewModels"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:controls="clr-namespace:PresetMagician.Controls"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:fluent="urn:fluent-ribbon"
    xmlns:controllerAssignments="clr-namespace:PresetMagician.Models.ControllerAssignments"
    Padding="2,2,2,2"
    d:DataContext="{d:DesignInstance viewModels:VstPluginViewModel}"
    mc:Ignorable="d">

    <catel:UserControl.Resources>

        <HierarchicalDataTemplate
            x:Key="Contents"
            DataType="{x:Type vendorPresetParser:PresetBank}"
            ItemsSource="{Binding PresetBanks}">
            <TextBlock Text="{Binding BankName}" />
        </HierarchicalDataTemplate>

        <ControlTemplate x:Key="SelectPlugin">
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="Select a plugin to view information" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="PluginNotScanned">
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="Plugin not scanned, unable to display information" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="BankView">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TreeView
                    Grid.Column="0"
                    Margin="5"
                    ItemTemplate="{StaticResource Contents}"
                    ItemsSource="{Binding Plugin.RootBank.PresetBanks}">
                    <TreeView.Resources>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True" />
                        </Style>
                    </TreeView.Resources>
                </TreeView>

                <GridSplitter
                    Grid.Column="1"
                    Width="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch"
                    ShowsPreview="True" />

                <DataGrid
                    x:Name="VSTPresetList"
                    Grid.Column="2"
                    Margin="5"
                    ItemsSource="{Binding Plugin.Presets}">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="150"
                            Binding="{Binding PresetName}"
                            Header="Preset"
                            IsReadOnly="True"
                            SortDirection="Ascending" />
                        <DataGridTextColumn
                            Width="150"
                            Binding="{Binding PresetBank.BankPath}"
                            Header="Bank"
                            IsReadOnly="True"
                            SortDirection="Ascending" />
                        <DataGridTextColumn
                            Width="80"
                            Binding="{Binding PreviewNote.FullNoteName}"
                            Header="Key"
                            IsReadOnly="False" />
                        <DataGridCheckBoxColumn
                            Width="80"
                            Binding="{Binding Export}"
                            Header="Export"
                            IsReadOnly="False" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="PluginSettings">

            <Grid VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                    <Label Content="Audio Preview Pre-Delay" />
                    <iconPacks:PackIconFontAwesome Margin="0,0,10,0" VerticalAlignment="Center"
                                                   Kind="QuestionCircleSolid" ToolTipService.ShowDuration="12000">
                        <iconPacks:PackIconFontAwesome.ToolTip>
                            <StackPanel Margin="5" Width="600">
                                <TextBlock TextWrapping="Wrap">
                                    This setting controls how many cycles PresetMagician waits between loading the
                                    preset and sending the MIDI note event. The empty cycles are not included in the
                                    preview. Note that high values affect the export speed negatively. Setting this
                                    to 0 uses the default value from the preset parser module.<LineBreak />
                                    <LineBreak />
                                    Some plugins require some processing time after loading a preset. If the MIDI
                                    note event is too early, no sound will be played, resulting in an empty preview
                                    file.<LineBreak />
                                    <LineBreak />
                                    Unfortunately, some plugins require variable processing time after loading a
                                    preset, so you might need to experiment with the values.
                                </TextBlock>

                            </StackPanel>
                        </iconPacks:PackIconFontAwesome.ToolTip>


                    </iconPacks:PackIconFontAwesome>
                </StackPanel>

                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <xctk:IntegerUpDown Width="200" Height="20" MaxWidth="200"
                                        Value="{Binding Plugin.Configuration.AudioPreviewPreDelay}"
                                        Watermark="Pre-Delay after loading preset (empty=default)" />
                    <TextBlock>Default from preset parser:</TextBlock>
                    <TextBlock Text="{Binding Plugin.PresetParser.AudioPreviewPreDelay}" />
                </StackPanel>


            </Grid>

        </ControlTemplate>

        <DataTemplate x:Key="ControllerPage" DataType="controllerAssignments:ControllerAssignmentPage">

            <ItemsControl ItemsSource="{Binding Controls}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Margin="1,0,0,0" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="controllerAssignments:ControllerAssignmentControl">
                        <StackPanel>
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding name}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="{Binding Path=section}" />
                            <Border Background="DarkSlateGray" Height="5">
                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="Width" Value="100" />
                                        <Setter Property="Margin" Value="0,0,0,0" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding LastSectionItem}" Value="True">
                                                <Setter Property="Width" Value="90" />
                                                <Setter Property="Margin" Value="0,0,10,0" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                            </Border>
                            <Slider Orientation="Vertical" Width="20" Height="60" />
                            <TextBlock Text="{Binding Path=name}" HorizontalAlignment="Center" />
                            <TextBlock Text="{Binding Path=id}" HorizontalAlignment="Center" />
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>

        </DataTemplate>

        <ControlTemplate x:Key="ControllerAssignments">

            <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <WrapPanel Grid.Row="0">
                    <fluent:Button
                        Command="{Binding OpenNKSFFile}"
                        Size="Middle"
                        Header="Load Mappings from NKSF file"
                        Icon="{iconPacks:FontAwesome Kind=FolderOpenRegular,
                                                     Width=16,
                                                     Height=16}" />
                    <fluent:Button
                        Command="{Binding ClearMappings}"
                        Size="Middle"
                        Header="Clear Mappings"
                        Icon="{iconPacks:Modern Kind=ClearReflectHorizontal,
                                                     Width=16,
                                                     Height=16}" />
                </WrapPanel>
               

                <TabControl SelectedIndex="{Binding CurrentControllerAssignmentPage}" ContentTemplate="{StaticResource ControllerPage}"
                            ItemsSource="{Binding ControllerAssignmentPages}" TabStripPlacement="Top" Grid.Row="1">
                    <TabControl.Style>
                        <Style TargetType="{x:Type TabControl}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ControllerAssignmentPages.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        
                    </TabControl.Style>
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Header" Value="{Binding Title}" />
                        </Style>
                    </TabControl.ItemContainerStyle>
                </TabControl>
                
                <TextBlock Grid.Row="1" Text="No controller assignments defined" HorizontalAlignment="Center"
                           VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ControllerAssignmentPages.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

            </Grid>

        </ControlTemplate>

        <ControlTemplate x:Key="PluginTabControl">
            <controls:TabControl Margin="2" TabStripPlacement="Top">
                <TabItem Header="Settings">
                    <ScrollViewer VerticalContentAlignment="Top" VerticalScrollBarVisibility="Auto">
                        <ContentControl Template="{StaticResource PluginSettings}" />
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Controller Assignments">
                    <ContentControl Template="{StaticResource ControllerAssignments}" />
                </TabItem>
                <TabItem Header="Bank View" VerticalContentAlignment="Stretch">
                    <ContentControl Template="{StaticResource BankView}" />
                </TabItem>

            </controls:TabControl>
        </ControlTemplate>
    </catel:UserControl.Resources>

    <ContentControl>
        <ContentControl.Style>
            <Style TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPluginSet, Mode=OneWay}" Value="True" />
                            <Condition Binding="{Binding Plugin.IsScanned, Mode=OneWay}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Template" Value="{StaticResource PluginTabControl}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPluginSet, Mode=OneWay}" Value="True" />
                            <Condition Binding="{Binding Plugin.IsScanned, Mode=OneWay}" Value="False" />
                        </MultiDataTrigger.Conditions>

                        <Setter Property="Template" Value="{StaticResource PluginNotScanned}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPluginSet, Mode=OneWay}" Value="False" />

                        </MultiDataTrigger.Conditions>

                        <Setter Property="Template" Value="{StaticResource SelectPlugin}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </ContentControl.Style>
    </ContentControl>

</catel:UserControl>