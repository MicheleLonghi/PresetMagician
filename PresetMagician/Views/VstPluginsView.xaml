<catel:UserControl
    x:Class="PresetMagician.Views.VstPluginsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:PresetMagician.Behaviors"
    xmlns:catel="http://schemas.catelproject.com"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dgx="urn:tom-englert.de/DataGridExtensions"

    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:PresetMagician.ViewModels"
    xmlns:models="clr-namespace:SharedModels;assembly=PresetMagician.SharedModels"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:fluent="urn:fluent-ribbon"
    Padding="1"
    d:DataContext="{d:DesignInstance viewModels:VstPluginsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <catel:UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <fluent:ColorToSolidColorBrushValueConverter x:Key="ColorToSolidColorBrush_ValueConverter" />
            
            <ControlTemplate x:Key="ComboboxFilter">
                <Grid d:DataContext="{d:DesignInstance dgx:DataGridFilterColumnControl}">
                    <Grid>
                        <Control Style="{DynamicResource {x:Static dgx:DataGridFilter.IconStyleKey}}"/>
                        <ComboBox x:Name="ComboBox" Width="Auto" MinWidth="20" Height="20" Margin="0" Padding="0" Text="{Binding Path=Filter, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding SelectableValues}" IsEditable="True" />
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger SourceName="ComboBox" Property="Text" Value="">
                        <Setter TargetName="ComboBox" Property="Opacity" Value="0" />
                    </Trigger>
                    <Trigger SourceName="ComboBox" Property="Text" Value="{x:Null}">
                        <Setter TargetName="ComboBox" Property="Opacity" Value="0" />
                    </Trigger>
                    <Trigger SourceName="ComboBox" Property="IsMouseOver" Value="True">
                        <Setter TargetName="ComboBox" Property="Opacity" Value="1" />
                    </Trigger>
                    <Trigger SourceName="ComboBox" Property="IsFocused" Value="True">
                        <Setter TargetName="ComboBox" Property="Opacity" Value="1" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
        
          

    </catel:UserControl.Resources>
    <Grid ScrollViewer.CanContentScroll="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ItemsControl
            Grid.Row="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">
            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Setter Property="Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasPlugins, Mode=OneWay}" Value="True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
            <TextBlock TextAlignment="Center">
                No Plugins found.
            </TextBlock>
            <Button
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{catel:CommandManagerBinding Tools.SettingsView}">
                <StackPanel
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <iconPacks:PackIconOcticons VerticalAlignment="Center" Kind="Settings" />
                    <TextBlock Margin="4,0,0,0" Text="Configure VST Paths" />
                </StackPanel>

            </Button>

        </ItemsControl>
        <xctk:BusyIndicator
            Grid.Row="0"
            IsBusy="{Binding ApplicationState.IsPluginListBusy, Mode=OneWay}"
            Visibility="{Binding HasPlugins, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, FallbackValue=Visible}">

            <xctk:BusyIndicator.BusyContentTemplate>
                <DataTemplate>
                    <StackPanel Width="600" Margin="2">
                        <TextBlock
                            HorizontalAlignment="Center"
                            FontWeight="Bold"
                            Text="{Binding Path=DataContext.ApplicationState.ApplicationBusyOperationDescription, Mode=OneWay, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        <StackPanel Margin="2">
                            <ProgressBar
                                Width="550"
                                Height="15"
                                Value="{Binding Path=DataContext.ApplicationState.ApplicationBusyPercent, Mode=OneWay, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <TextBlock
                                Width="550"
                                Height="30"
                                HorizontalAlignment="Center"
                                Text="{Binding Path=DataContext.ApplicationState.ApplicationBusyStatusText, Mode=OneWay, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                TextAlignment="Left"
                                TextWrapping="Wrap" />
                        </StackPanel>
                        <Grid>

                            <Button
                                Margin="2,0,0,0"
                                HorizontalAlignment="Center"
                                Command="{catel:CommandManagerBinding Application.CancelOperation}">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Content" Value="Cancel Operation" />
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=DataContext.ApplicationState.ApplicationOperationCancelRequested, Mode=OneWay, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Content" Value="Cancelling operation..." />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </StackPanel>
                </DataTemplate>
            </xctk:BusyIndicator.BusyContentTemplate>
            <xctk:BusyIndicator.ProgressBarStyle>
                <Style TargetType="ProgressBar">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </xctk:BusyIndicator.ProgressBarStyle>


            <DataGrid
                x:Name="VstPluginList"
                behaviors:MultiSelectBehavior.SynchronizedSelectedItems="{Binding SelectedPlugins}"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                GridLinesVisibility="All"
                ItemsSource="{Binding Plugins}"
                ScrollViewer.CanContentScroll="True"
                SelectedItem="{Binding SelectedPlugin}"
                SelectionChanged="VstPluginList_OnSelectionChanged"
                dgx:DataGridFilter.IsAutoFilterEnabled="True"
                dgx:Tools.ApplyInitialSorting="True"
                dgx:DataGridFilter.FilterEvaluationDelay="0:0:0.1"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <DataTemplate x:Key="PluginImages" DataType="{x:Type models:Plugin}">
                        <StackPanel Height="22" Margin="0" Orientation="Horizontal"
                                    Background="{Binding NativeInstrumentsResource.Color.BackgroundColor, Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}">
                            <Image Margin="0,0,10,0" Height="22" RenderOptions.BitmapScalingMode="HighQuality"
                                   Source="{Binding NativeInstrumentsResource.VB_artwork.Image}"
                                   HorizontalAlignment="Left" />
                            <Image Margin="0" Height="22" RenderOptions.BitmapScalingMode="HighQuality"
                                   Source="{Binding NativeInstrumentsResource.VB_logo.Image}"
                                   HorizontalAlignment="Left" />
                        </StackPanel>
                    </DataTemplate>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn CellStyle="{StaticResource NoPaddingCellStyle}"
                                            dgx:DataGridFilterColumn.IsFilterVisible="False" CellTemplate="{StaticResource PluginImages}"/>
                    <DataGridTextColumn
                        Width="150"
                        Binding="{Binding PluginName}"
                        Header="Name"
                        SortDirection="Ascending"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="Auto"
                        Binding="{Binding PluginVendor}"
                        Header="Vendor"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="80"
                        Binding="{Binding NumPresets}"
                        Header="Presets"
                        IsReadOnly="True" />
                    <DataGridTemplateColumn
                        Width="60"
                        dgx:DataGridFilterColumn.IsFilterVisible="False"
                        Header="Remarks"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="0"
                                    Padding="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ToolTipService.BetweenShowDelay="0"
                                    ToolTipService.InitialShowDelay="100">
                                    <iconPacks:PackIconOcticons
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Kind="Alert">
                                        <iconPacks:PackIconOcticons.Style>
                                            <Style TargetType="{x:Type iconPacks:PackIconOcticons}">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="ToolTip" Value="{Binding PresetParser.Remarks, Mode=OneWay}" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding PresetParser.Remarks, Mode=OneWay}" Value="{x:Null}" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding PresetParser.Remarks, Mode=OneWay}" Value="" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </iconPacks:PackIconOcticons.Style>
                                    </iconPacks:PackIconOcticons>
                                </TextBlock>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        dgx:DataGridFilterColumn.IsFilterVisible="False"
                        Width="45"
                        CellStyle="{StaticResource NoPaddingCellStyle}"
                        Header="Type"
                        IsReadOnly="True"
                        SortMemberPath="PluginTypeDescription">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock
                                    Margin="0"
                                    Padding="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ToolTipService.BetweenShowDelay="0"
                                    ToolTipService.InitialShowDelay="100">
                                    <iconPacks:PackIconMaterial HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <iconPacks:PackIconMaterial.Style>
                                            <Style TargetType="{x:Type iconPacks:PackIconMaterial}">
                                                <Setter Property="Kind" Value="LockQuestion" />
                                                <Setter Property="Foreground" Value="LightGray" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding PluginTypeDescription, Mode=OneWay}" Value="Effect" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Kind" Value="AutoFix" />
                                                        <Setter Property="Foreground" Value="Black" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding PluginTypeDescription, Mode=OneWay}" Value="Instrument" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Kind" Value="Piano" />
                                                        <Setter Property="Foreground" Value="Black" />
                                                    </MultiDataTrigger>


                                                </Style.Triggers>
                                            </Style>
                                        </iconPacks:PackIconMaterial.Style>
                                    </iconPacks:PackIconMaterial>
                                </TextBlock>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn
                        Width="45"
                        CanUserResize="False"
                        Header="Status"
                        dgx:DataGridFilterColumn.IsFilterVisible="False"
                        IsReadOnly="True"
                        SortDirection="Ascending"
                        SortMemberPath="IsSupported">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>

                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ToolTipService.BetweenShowDelay="0"
                                    ToolTipService.InitialShowDelay="100">
                                    <iconPacks:PackIconFontAwesome HorizontalAlignment="Center" VerticalAlignment="Center">

                                        <iconPacks:PackIconFontAwesome.Style>
                                            <Style TargetType="{x:Type iconPacks:PackIconFontAwesome}">
                                                <Setter Property="Kind" Value="QuestionCircleRegular" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsScanned, Mode=OneWay}" Value="False" />
                                                            <Condition Binding="{Binding LoadError, Mode=OneWay}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Kind" Value="ExclamationTriangleSolid" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsScanned, Mode=OneWay}" Value="True" />
                                                            <Condition Binding="{Binding IsSupported, Mode=OneWay}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Kind" Value="CheckSolid" />
                                                        <Setter Property="Foreground" Value="Green" />
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsScanned, Mode=OneWay}" Value="True" />
                                                            <Condition Binding="{Binding IsSupported, Mode=OneWay}" Value="False" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Kind" Value="TimesSolid" />
                                                    </MultiDataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </iconPacks:PackIconFontAwesome.Style>
                                    </iconPacks:PackIconFontAwesome>

                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="ToolTip" Value="Plugin not analyzed yet" />
                                            <Style.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsScanned, Mode=OneWay}" Value="False" />
                                                        <Condition Binding="{Binding LoadError, Mode=OneWay}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="ToolTip" Value="Error loading plugin" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsScanned, Mode=OneWay}" Value="True" />
                                                        <Condition Binding="{Binding IsSupported, Mode=OneWay}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="ToolTip" Value="This plugin is supported" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsScanned, Mode=OneWay}" Value="True" />
                                                        <Condition Binding="{Binding IsSupported, Mode=OneWay}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="ToolTip" Value="This plugin is not supported" />
                                                </MultiDataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>


                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Width="60"
                        Binding="{Binding IsLoaded}"
                        Header="Loaded"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="60"
                        Binding="{Binding IsEnabled}"
                        Header="Enabled"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="120"
                        Binding="{Binding PresetParser.PresetParserType}"
                        Header="Export Module"
                        IsReadOnly="True" />
                    
                    <DataGridTextColumn
                        Width="150"
                        MinWidth="100"
                        Binding="{Binding DllFilename}"
                        Header="Plugin DLL"
                        IsReadOnly="True" />
                    <DataGridTextColumn
                        Width="1*"
                        MinWidth="150"
                        Binding="{Binding DllDirectory}"
                        Header="Directory"
                        IsReadOnly="True" />
                </DataGrid.Columns>
            </DataGrid>
        </xctk:BusyIndicator>

    </Grid>
</catel:UserControl>