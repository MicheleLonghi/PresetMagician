<catel:UserControl
    x:Class="PresetMagician.Views.VstPluginView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:catel="http://schemas.catelproject.com"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vendorPresetParser="clr-namespace:Drachenkatze.PresetMagician.VendorPresetParser;assembly=Drachenkatze.PresetMagician.VendorPresetParser"
    xmlns:viewModels="clr-namespace:PresetMagician.ViewModels"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:orccontrols="http://schemas.wildgums.com/orc/controls"
    xmlns:controls="clr-namespace:PresetMagician.Controls"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Padding="2,2,2,2"
    d:DataContext="{d:DesignInstance viewModels:VstPluginViewModel}"
    mc:Ignorable="d">

    <catel:UserControl.Resources>

        <HierarchicalDataTemplate
            x:Key="Contents"
            DataType="{x:Type vendorPresetParser:PresetBank}"
            ItemsSource="{Binding PresetBanks}">
            <TextBlock Text="{Binding BankName}" />
        </HierarchicalDataTemplate>

        <ControlTemplate x:Key="SelectPlugin">
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="Select a plugin to view information" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="PluginNotScanned">
            <Grid>
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="Plugin not scanned, unable to display information" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="BankView">
           
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TreeView
                    Grid.Column="0"
                    Margin="5"
                    ItemTemplate="{StaticResource Contents}"
                    ItemsSource="{Binding Plugin.RootBank.PresetBanks}">
                    <TreeView.Resources>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True" />
                        </Style>
                    </TreeView.Resources>
                </TreeView>

                <GridSplitter
                    Grid.Column="1"
                    Width="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch"
                    ShowsPreview="True" />

                <DataGrid
                    x:Name="VSTPresetList"
                    Grid.Column="2"
                    Margin="5"
                    ItemsSource="{Binding Plugin.Presets}">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="150"
                            Binding="{Binding PresetName}"
                            Header="Preset"
                            IsReadOnly="True"
                            SortDirection="Ascending" />
                        <DataGridTextColumn
                            Width="150"
                            Binding="{Binding PresetBank.BankPath}"
                            Header="Bank"
                            IsReadOnly="True"
                            SortDirection="Ascending" />
                        <DataGridTextColumn
                            Width="80"
                            Binding="{Binding PreviewNote.FullNoteName}"
                            Header="Key"
                            IsReadOnly="False" />
                        <DataGridCheckBoxColumn
                            Width="80"
                            Binding="{Binding Export}"
                            Header="Export"
                            IsReadOnly="False" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </ControlTemplate>
        
        <ControlTemplate x:Key="PluginSettings">
            
                <Grid VerticalAlignment="Top" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                    <Label Content="Audio Preview Pre-Delay"
                         />
                    <iconPacks:PackIconFontAwesome Margin="0,0,10,0" VerticalAlignment="Center" Kind="QuestionCircleSolid" ToolTipService.ShowDuration="12000">
                        <iconPacks:PackIconFontAwesome.ToolTip>
                         <StackPanel Margin="5" Width="600">
                                    <TextBlock TextWrapping="Wrap">
                                        This setting controls how many cycles PresetMagician waits between loading the
                                        preset and sending the MIDI note event. The empty cycles are not included in the
                                        preview. Note that high values affect the export speed negatively. Setting this
                                        to 0 uses the default value from the preset parser module.<LineBreak />
                                        <LineBreak />
                                        Some plugins require some processing time after loading a preset. If the MIDI
                                        note event is too early, no sound will be played, resulting in an empty preview
                                        file.<LineBreak />
                                        <LineBreak />
                                        Unfortunately, some plugins require variable processing time after loading a
                                        preset, so you might need to experiment with the values.
                                    </TextBlock>

                                </StackPanel>
                        </iconPacks:PackIconFontAwesome.ToolTip>
                        
                            
                    </iconPacks:PackIconFontAwesome>
                    </StackPanel>
                  
                    <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                        <xctk:IntegerUpDown Width="200" Height="20" MaxWidth="200" Value="{Binding Plugin.Configuration.AudioPreviewPreDelay}" Watermark="Pre-Delay after loading preset (empty=default)" />
                        <TextBlock>Default from preset parser:</TextBlock>
                        <TextBlock Text="{Binding Plugin.PresetParser.AudioPreviewPreDelay}"/>
                    </StackPanel>
                    

                </Grid>
            
        </ControlTemplate>
        
        <ControlTemplate x:Key="PluginTabControl">
            <controls:TabControl Margin="2" TabStripPlacement="Top">
                <TabItem Header="Settings">
                    <ScrollViewer VerticalContentAlignment="Top" VerticalScrollBarVisibility="Auto">
                        <ContentControl Template="{StaticResource PluginSettings}"></ContentControl>
                        </ScrollViewer>
                </TabItem>
                <TabItem Header="Bank View" VerticalContentAlignment="Stretch">
                    <ContentControl Template="{StaticResource BankView}"></ContentControl>
                </TabItem>
                
            </controls:TabControl>
        </ControlTemplate>
    </catel:UserControl.Resources>

    <ContentControl>
        <ContentControl.Style>
            <Style TargetType="{x:Type ContentControl}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPluginSet, Mode=OneWay}" Value="True" />
                            <Condition Binding="{Binding Plugin.IsScanned, Mode=OneWay}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Template" Value="{StaticResource PluginTabControl}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPluginSet, Mode=OneWay}" Value="True" />
                            <Condition Binding="{Binding Plugin.IsScanned, Mode=OneWay}" Value="False" />
                        </MultiDataTrigger.Conditions>

                        <Setter Property="Template" Value="{StaticResource PluginNotScanned}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsPluginSet, Mode=OneWay}" Value="False" />

                        </MultiDataTrigger.Conditions>

                        <Setter Property="Template" Value="{StaticResource SelectPlugin}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </ContentControl.Style>
    </ContentControl>

</catel:UserControl>